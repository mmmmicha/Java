package src.javaStudy;
/*=========================================
  ■■■ 정렬(sort) 알고리즘 ■■■
  - 거품 정렬(Bubble Sort : 버블 정렬)
=========================================*/

/*
○ 정렬
   : 데이터를 특정한 규칙(기준)에 맞게 순서대로 나열(오름차순, 내림차순)

○ 정렬의 목적
   : 데이터 처리 과정의 편의성이나 가독성을 높이기 위함
     → 보기 좋게... 검색하기 위함

○ 정렬의 종류
   : 버블 정렬, 선택 정렬, 삽입 정렬, 힙 정렬, 퀵 정렬, 쉘 정렬...
*/


public class Test107
{
	public static void main(String[] args)
	{
		int[] a = {52, 42, 12, 62, 60};
		/*
		42 52 12 62 60		0	1
		== --
		42 12 52 62 60		1	2
		   == -- 
		42 12 52 62 60		2	3
			  == --	
		42 12 52 60 62		3   4	
			   	 == --		
		--------------------------------- 1회전
		12 42 52 60 62		0	1	
		== --		
		12 42 52 60 62		1	2	
		   == --		 
		12 42 52 60 62		2	3	
		      == --		 
		--------------------------------- 2회전
		12 42 52 60 62		0	1	
		== --	
		12 42 52 60 62		1	2	
		   == --	
	    --------------------------------- 3회전
		12 42 52 60 62		0	1	
		== --	

			  
		*/

		// Bubble sort 구현
		// 01 12 23 34 / 01 12 23 / 01 12 / 01

		// 0 1 2 3 4 / 0 1 2 3 4 / 0 1 2 3 4 / 0 1 2 3 4

// ====================================================================

		int i, j;
		System.out.print("Source Data : ");
		
		// 향상된 for 문 → forEach 구문

		for (int n : a)
		{
			System.out.print(n+ " " );
		}
		System.out.println();


		for (i=1; i<a.length-1; i++)
		{
			for (j=0; j<a.length-i; j++)
			{
				//System.out.print("[" + j + "," + (j+1) + "]");
				//if (a[j]<a[j+1])			// 내림차순 정렬
				if (a[j]>a[j+1])			// 오름차순 정렬
				{
					a[j]^=a[j+1];
					a[j+1]^=a[j];
					a[j]^=a[j+1];
				}
			}
		}

		System.out.print("Source Data : ");
		
		// 향상된 for 문 → forEach 구문

		for (int n : a)
		{
			System.out.print(n+ " " );
		}
		System.out.println();


		
	}
}

/*
Source Data : 52 42 12 62 60
Source Data : 12 42 52 60 62
계속하려면 아무 키나 누르십시오 . . .
*/