package src.javaStudy;
/*=========================================
  ■■■ 정렬(sort) 알고리즘 ■■■
  - 선택 정렬(Selection Sort)
=========================================*/

/*
○ 정렬
   : 데이터를 특정한 규칙(기준)에 맞게 순서대로 나열(오름차순, 내림차순)

○ 정렬의 목적
   : 데이터 처리 과정의 편의성이나 가독성을 높이기 위함
     → 보기 좋게... 검색하기 위함

○ 정렬의 종류
   : 버블 정렬, 선택 정렬, 삽입 정렬, 힙 정렬, 퀵 정렬, 쉘 정렬...
*/

public class Test106
{
	public static void main(String[] args)
	{
		int[] a = {52, 42, 12, 62, 60};
		/*
		42 52 12 62 60		   0   1
		== --
		12 52 42 62 60		   0   2
		==    --
		12 52 42 62 60		   0   3
		==       --
		12 52 42 62 60		   0   4
		==			--		
		------------------------------------- 1회전

		12 42 52 62 60		   1   2
		   == -- 
		12 42 52 62 60		   1   3
		   ==    -- 
		12 42 52 62 60		   1   4
		   ==       --
		------------------------------------- 2회전
		
		12 42 52 62 60		   2   3
			  == -- 
		12 42 52 62 60		   2   4
			  ==	--			
		------------------------------------- 3회전

		12 42 52 60 62		   3   4
				 == --
		------------------------------------- 4회전
		*/

		int i, j;

		System.out.print("Source Data : ");
		
		// 향상된 for 문 → forEach 구문

		for (int n : a)
		{
			System.out.print(n+ " " );
		}
		System.out.println();
		/*
		for (i=0; i<a.length; i++)
		{
			System.out.print(a[i] + " ");
		}
		System.out.println();
		*/


		






		// Selection Sort 구현

		for (i=0; i<a.length-1; i++)		// 0     1    2   3		비교 기준 데이터
		{
			for (j=i+1; j<a.length; j++)	// 1234, 234, 34, 4		비교 대상 데이터	
			{
				if (a[i]>a[j])				// 크기 비교 후 자리 교체	→ 오름차순
				//if(a[i]<a[j)
				{
					a[i]^=a[j];
					a[j]^=a[i];
					a[i]^=a[j];

				}
			}
		}

		System.out.print("Sorted Data : ");	
		for (int n : a)
		{
			System.out.print(n+ " " );
		}
		System.out.println();

	}
}

/*
Source Data : 52 42 12 62 60
Sorted Data : 12 42 52 60 62
계속하려면 아무 키나 누르십시오 . . .
*/