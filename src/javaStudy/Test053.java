package src.javaStudy;
/*=========================================
  ■■■ 실행 흐름의 컨트롤 (제어문) ■■■
  - 반복문(while문) 실습
===========================================*/

// ○ 과제
// 사용자로부터 원하는 단(구구단)을 입력받아
// 해당하는 구구단을 출력하는 프로그램을 구현한다.
// 단, 1단 ~ 9단 사이의 수를 입력받은 상황이 아니라면
// 프로그램을 종료해 버릴 수 있도록 처리한다.

// 실행 예)
// 원하는 단(구구단) 입력 : 7
// 7 * 1 = 7
// 7 * 2 = 14
// 7 * 3 = 21
//	 :
// 7 * 9 = 63
// 계속하려면 아무 키나 누르세요...

// 원하는 단(구구단) 입력 : 11
// 1 부터 9까지의 정수만 입력 가능합니다.
// 계속하려면 아무 키나 누르세요...

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;


public class Test053
{
	public static void main(String[] args) throws IOException		//-- br.readLine() 을 호출하기위해...
	{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		int a, n=1;		//-- 사용자로부터 입력받을 정수에 대한 변수, 루프변수 선언 및 초기화
		int x;			//-- 구구단 저장 변수

		System.out.print("원하는 단(구구단) 입력 : ");
		a = Integer.parseInt(br.readLine());	//-- 사용자로부터 정수 입력 받기
		
		if (2<=a && a<=9)						//-- 2단 ~ 9단 까지 범위 설정
		{
			while (n<=9)						//-- 1~9 까지 곱셈 피연산자를 루프변수로 나타내기 위해 범위 설정
			{
				x = a * n;						//-- 입력받은 정수와 루프변수간의 곱을 나타냄

				System.out.printf("%d * %d = %d\n",a ,n ,x);	//-- 루프가 돌면서 피연산자 9번에 따른 출력값이 9번 나오도록 설정

				n++;							//-- 루프 변수 증가
			}
		}
				
		else if (a<2 || a>9)					//-- 2단 ~ 9단 이 아닌 입력값을 받았을 때 잘못된 입력을 알리는 조건
		{
			System.out.println("1 부터 9 까지의 정수만 입력 가능합니다.");
		}
		else									//-- 정수가 아닌 알 수 없는 입력일 때 알리는 안내문
		{
			System.out.println("오류 발생~~!!!!");
		}
		
	}
}

// 실행 결과

/*

원하는 단(구구단) 입력 : 3
3 * 1 = 3
3 * 2 = 6
3 * 3 = 9
3 * 4 = 12
3 * 5 = 15
3 * 6 = 18
3 * 7 = 21
3 * 8 = 24
3 * 9 = 27
계속하려면 아무 키나 누르십시오 . . .

원하는 단(구구단) 입력 : 9
9 * 1 = 9
9 * 2 = 18
9 * 3 = 27
9 * 4 = 36
9 * 5 = 45
9 * 6 = 54
9 * 7 = 63
9 * 8 = 72
9 * 9 = 81
계속하려면 아무 키나 누르십시오 . . .

원하는 단(구구단) 입력 : 11
1 부터 9 까지의 정수만 입력 가능합니다.
계속하려면 아무 키나 누르십시오 . . .


*/