/*====================================
  ■■■ 변수와 자료형 ■■■
   - 지역변수의 초기값 테스트
   - 형 변환 / 접미사 활용
 ====================================*/


public class Test006
{
	public static void main(String[] args)
	{
		//변수 선언(지역 변수 a)
		int a;

		//System.out.println("a의 결과 : " +a);
		//-- 에러 발생(컴파일 에러)
		// 	 : 초기화 과정을 거치지 않고 사용했기 때문에 발생하는 에러
 
		// ※ primative Type 의 지역 변수는
		//	  초기화 과정을 거치지 않은 상태에서 사용하지 못한다.
		//    값이 담기지 않은 상태에서 접근하여 출력하고자 하면
		//    에러 발생하는 것이다.

		// 변수의 초기화(→ 메모리에 값 할당)
		a = 10;

		// 변수 초기화 이후 다시 출력
		System.out.println("a의 결과 : " +a);
		//--==>> a의 결과 : 10

		// 변수 선언 및 초기화
		byte b = 20;

	
		// 결과 출력
		System.out.println("b의 결과 : " + b);
		//--==>> b의 결과 : 20

		// 변수 선언
		short c;

		// 연산 및 처리(대입 연산)
		// c = a;
		//-- 에러 발생(컴파일 에러)
		//   자료형이 작은 것에 큰 것을 담지 못한다.
		//   (자동 형 변환 규칙 위반)

		// 명시적 형 변환(강제 형 변환)
		c = (short)a;
		//-- a 가 가지고 있는 데이터를
		//   short 형으로 형 변환을 수행한 후
		//   변수 c 에 대입한다.

		// 00000000 00000000 00000000 00001010 → int 형 a 변수 10
		//             ↓ 형 변환
		// 00000000 00001010


		// 결과 출력
		System.out.println("c의 결과 : " + c);
		//--==>> c의 결과 : 10


		// 변수 선언 및 초기화
		long d = 10000000000L;   // 백억
		//-- 접미사 『L』 이 중요하다.
		//   long 형은 숫자(상수) 뒤에 『L』 또는 『l』 을 붙여
		//   상수를 표현해야 한다.
		//   즉, 약 21억 이상 되는 상수에는 데이터 뒤에 접미사를
		//	 꼭 붙여줄 수 있도록 한다.



		// 결과 출력
		System.out.println("d의 결과 : " + d);
		//--==>> d의 결과 : 10000000000




		// 변수 선언
		int e = 030;
		
		System.out.println("e의 결과 : " + e);

		//--==>> e의 결과 : 24
		//-- 접두사 『0』 → 8진수



		// 변수 선언 및 초기화
		int f = 0xa6;
		System.out.println("f의 결과 : " + f);
		//--==>> f의 결과 : 166
		//-- 접두사 『0x』 → 16진수

		// 변수 선언 및 초기화		
		float g = 0.0f;

		// 결과 출력
		System.out.println("g의 결과 : " + g);
		//--==>> f의 결과 : 0.0
		






	}
}